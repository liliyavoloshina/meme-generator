{"version":3,"sources":["components/uiComponents.js","components/TheHeader.js","components/TheMeme.js","components/TheGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","main","HeaderElement","header","HeaderWrapper","div","Title","h1","Image","img","Header","src","alt","MemeElement","MemeImage","Text","h2","MemeTextTop","MemeTextBottom","Meme","props","image","textTop","textBottom","Form","form","Input","input","Button","button","Generator","handleChange","e","target","value","name","setState","handleSubmit","preventDefault","all","state","allMemes","randomImage","Math","floor","random","length","url","a","fetch","response","json","parsedResponse","memes","data","this","Error","onSubmit","onChange","placeholder","React","Component","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAEaA,EAAYC,IAAOC,KAAV,oH,OCkBtB,I,UAAMC,EAAgBF,IAAOG,OAAV,2EAKXC,EAAgBJ,IAAOK,IAAV,kGAMbC,EAAQN,IAAOO,GAAV,mDAILC,EAAQR,IAAOS,IAAV,qEAKEC,EArCf,WAEE,OACE,cAACR,EAAD,UACE,cAACH,EAAD,UACE,eAACK,EAAD,WACE,cAACI,EAAD,CACEG,IAAI,iEACJC,IAAI,aAEN,cAACN,EAAD,qC,gECFV,I,QAAMO,EAAcb,IAAOK,IAAV,0FAKXS,EAAYd,IAAOS,IAAV,qFAMTM,EAAOf,IAAOgB,GAAV,qdAkBJC,EAAcjB,YAAOe,EAAPf,CAAH,0CAGXkB,EAAiBlB,YAAOe,EAAPf,CAAH,6CAILmB,EA9Cf,SAAcC,GACZ,OACE,eAACP,EAAD,WACE,cAACC,EAAD,CAAWH,IAAKS,EAAMC,MAAOT,IAAI,yBACjC,cAACK,EAAD,UAAcG,EAAME,UACpB,cAACJ,EAAD,UAAiBE,EAAMG,iBCDvBC,EAAOxB,IAAOyB,KAAV,iFAKJC,EAAQ1B,IAAO2B,MAAV,6LAWLC,EAAS5B,IAAO6B,OAAV,iMAgFGC,E,kDAnEb,aAAe,IAAD,8BACZ,gBASFC,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBC,EADU,EACVA,MAAOC,EADG,EACHA,KACf,EAAKC,SAAL,eACGD,EAAOD,KAbE,EAiBdG,aAAe,SAACL,GACdA,EAAEM,iBACF,IAAMC,EAAM,EAAKC,MAAMC,SACjBC,EAAcH,EAAII,KAAKC,MAAMD,KAAKE,SAAWN,EAAIO,SACvD,EAAKV,SAAS,CACZf,MAAOqB,EAAYK,OApBrB,EAAKP,MAAQ,CACXlB,QAAS,sBACTC,WAAY,mBACZF,MAAO,gCACPoB,SAAU,IANA,E,4FA0Bd,gCAAAO,EAAA,+EAE2BC,MAAM,qCAFjC,cAEUC,EAFV,gBAGiCA,EAASC,OAH1C,OAGUC,EAHV,OAIYC,EAAUD,EAAeE,KAAzBD,MACRE,KAAKnB,SAAS,CACZK,SAAUY,IANhB,wDASU,IAAIG,MAAJ,MATV,0D,0EAaA,WACE,OACE,eAACzD,EAAD,WACE,eAACyB,EAAD,CAAMiC,SAAUF,KAAKlB,aAArB,UACE,cAACX,EAAD,CACEgC,SAAUH,KAAKxB,aACfG,MAAOqB,KAAKf,MAAMlB,QAClBa,KAAK,UACLwB,YAAY,aAEd,cAACjC,EAAD,CACEgC,SAAUH,KAAKxB,aACfG,MAAOqB,KAAKf,MAAMjB,WAClBY,KAAK,aACLwB,YAAY,gBAEd,cAAC/B,EAAD,2BAEF,cAAC,EAAD,CACEN,QAASiC,KAAKf,MAAMlB,QACpBC,WAAYgC,KAAKf,MAAMjB,WACvBF,MAAOkC,KAAKf,MAAMnB,e,GA7DJuC,IAAMC,WC7BxBC,EAAcC,YAAH,mGAiBFC,MAVf,WACE,OACE,gCACE,cAACF,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCJSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,M","file":"static/js/main.05c7cb4e.chunk.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const Container = styled.main`\r\n  max-width: 1440px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-top: 1em;\r\n`\r\n","import styled from 'styled-components'\r\nimport { Container } from './uiComponents'\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <HeaderElement>\r\n      <Container>\r\n        <HeaderWrapper>\r\n          <Image\r\n            src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\r\n            alt=\"Problem?\"\r\n          />\r\n          <Title>Meme Generator</Title>\r\n        </HeaderWrapper>\r\n      </Container>\r\n    </HeaderElement>\r\n  )\r\n}\r\n\r\nconst HeaderElement = styled.header`\r\n    padding: 1em;\r\n    background: #6441a5;\r\n  `\r\n\r\n  const HeaderWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 2em;\r\n  `\r\n\r\n  const Title = styled.h1`\r\n    color: #ffffff;\r\n  `\r\n\r\n  const Image = styled.img`\r\n    width: 100px;\r\n    height: 100px;\r\n  `\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\nfunction Meme(props) {\r\n  return (\r\n    <MemeElement>\r\n      <MemeImage src={props.image} alt=\"Generated Meme Image\" />\r\n      <MemeTextTop>{props.textTop}</MemeTextTop>\r\n      <MemeTextBottom>{props.textBottom}</MemeTextBottom>\r\n    </MemeElement>\r\n  )\r\n}\r\n\r\nconst MemeElement = styled.div`\r\n  position: relative;\r\n  height: 550px;\r\n  margin: 2em auto;\r\n`\r\nconst MemeImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: contain;\r\n`\r\n\r\nconst Text = styled.h2`\r\n  position: absolute;\r\n  width: 80%;\r\n  text-align: center;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  margin: 15px 0;\r\n  padding: 0 5px;\r\n  font-family: impact, sans-serif;\r\n  font-size: 2em;\r\n  text-transform: uppercase;\r\n  color: white;\r\n  letter-spacing: 1px;\r\n  text-shadow: 2px 2px 0 #000, -2px -2px 0 #000, 2px -2px 0 #000,\r\n    -2px 2px 0 #000, 0 2px 0 #000, 2px 0 0 #000, 0 -2px 0 #000, -2px 0 0 #000,\r\n    2px 2px 5px #000;\r\n`\r\n\r\nconst MemeTextTop = styled(Text)`\r\n  top: .5em;\r\n`\r\nconst MemeTextBottom = styled(Text)`\r\n  bottom: .5em;\r\n`\r\n\r\nexport default Meme\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Container } from './uiComponents'\r\nimport Meme from './TheMeme'\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: 42%;\r\n  padding: 1em;\r\n  border-radius: 5px;\r\n  border: 1px solid #cccccc;\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0px 0px 2px #6441a5;\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  padding: 1em;\r\n  border-radius: 5px;\r\n  border: none;\r\n  color: #ffffff;\r\n  background-color: #6441a5;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\nclass Generator extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      textTop: 'One does not simply',\r\n      textBottom: 'Walk into Mordor',\r\n      image: 'http://i.imgflip.com/1bij.jpg',\r\n      allMemes: []\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const all = this.state.allMemes\r\n    const randomImage = all[Math.floor(Math.random() * all.length)]\r\n    this.setState({\r\n      image: randomImage.url\r\n    })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await fetch('https://api.imgflip.com/get_memes')\r\n      const parsedResponse = await response.json()\r\n      const { memes } = parsedResponse.data\r\n      this.setState({\r\n        allMemes: memes\r\n      })\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Input\r\n            onChange={this.handleChange}\r\n            value={this.state.textTop}\r\n            name=\"textTop\"\r\n            placeholder=\"Top text\"\r\n          />\r\n          <Input\r\n            onChange={this.handleChange}\r\n            value={this.state.textBottom}\r\n            name=\"textBottom\"\r\n            placeholder=\"Bottom text\"\r\n          />\r\n          <Button>Generate!</Button>\r\n        </Form>\r\n        <Meme\r\n          textTop={this.state.textTop}\r\n          textBottom={this.state.textBottom}\r\n          image={this.state.image}\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Generator\r\n","import Header from './components/TheHeader'\nimport Generator from './components/TheGenerator'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: 'Roboto', sans-serif;\n  }\n`\n\nfunction App() {\n  return (\n    <div>\n      <GlobalStyle />\n      <Header />\n      <Generator />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}